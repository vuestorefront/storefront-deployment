name: Build Frontend
description: Builds Storefront app docker image
inputs:
  frontend:
    description: 'Switch between Next.js and Nuxt'
    required: false
    default: 'next'
  project_name:
    description: 'Project name'
    required: true
  docker_registry_url:
    description: 'Docker registry url'
    required: false
    default: 'registry.vuestorefront.cloud'
  cloud_username:
    description: 'Cloud username'
    required: true
  cloud_password:
    description: 'Cloud password'
    required: true
  cloud_region:
    description: 'Cloud region'
    required: true
  npm_email:
    description: 'NPM email'
    required: true
  npm_pass:
    description: 'NPM password'
    required: true
  npm_user:
    description: 'NPM user'
    required: true
  npm_registry:
    description: 'NPM registry'
    required: false
    default: 'https://registrynpm.storefrontcloud.io'
  api_base_url:
    description: 'Base Middleware API URL for Storefront. By default https://project_name.region.gcp.storefrontcloud.io/api'
    required: false
  multistore_enabled:
    description: 'Switch for multistore'
    required: false
    default: 'false'
  image_provider:
    description: 'Image provider name'
    required: false
  image_provider_upload_url:
    description: 'Image Provider upload url'
    required: false
  image_provider_fetch_url:
    description: 'Image Provider fetch url'
    required: false
  coveo_organization_id:
    description: 'Coveo organization id'
    required: false
  coveo_access_token:
    description: 'Coveo access token'
    required: false
  coveo_tracking_id:
    description: 'Coveo tracking id'
    required: false
  version:
    description: 'Version of the app'
    required: false
  default_html_cache_control:
    description: 'Default cache control header value for SSR pages'
    required: false
    default: 'public, max-age=0, s-maxage=15, must-revalidate'
runs:
  using: 'composite'
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Build and publish docker image (Next.js frontend)
      if: ${{ inputs.frontend == 'next' || inputs.frontend == 'nextjs' }}
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: ${{ inputs.project_name }}-storefrontcloud-io/vue-storefront:${{ inputs.version || github.sha }}
        registry: ${{ inputs.docker_registry_url }}
        username: ${{ inputs.cloud_username }}
        password: ${{ inputs.cloud_password }}
        dockerfile: .vuestorefrontcloud/docker/nextjs/Dockerfile-frontend
        buildoptions: --compress
        buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY,NEXT_PUBLIC_API_BASE_URL,NEXT_PUBLIC_MULTISTORE_ENABLED,NEXT_IMAGE_PROVIDER,NEXT_PUBLIC_IMAGE_LOADER_FETCH_URL,NEXT_PUBLIC_IMAGE_LOADER_UPLOAD_URL,NEXT_PUBLIC_COVEO_ORGANIZATION_ID,NEXT_PUBLIC_COVEO_ACCESS_TOKEN,NEXT_DEFAULT_HTML_CACHE_CONTROL,NEXT_PUBLIC_COVEO_TRACKING_ID,NEXT_PUBLIC_CDN_CACHE_BUSTING_ID
      env:
        NPM_EMAIL: ${{ inputs.npm_email }}
        NPM_PASS: ${{ inputs.npm_pass }}
        NPM_USER: ${{ inputs.npm_user }}
        NPM_REGISTRY: ${{ inputs.npm_registry }}
        NEXT_PUBLIC_API_BASE_URL: ${{ inputs.api_base_url || format('https://{0}.{1}.{2}/api', inputs.project_name, inputs.cloud_region, 'gcp.storefrontcloud.io') }}
        NEXT_PUBLIC_MULTISTORE_ENABLED: ${{ inputs.multistore_enabled }}
        NEXT_IMAGE_PROVIDER: ${{ inputs.image_provider }}
        NEXT_PUBLIC_IMAGE_LOADER_UPLOAD_URL: ${{ inputs.image_provider_upload_url }}
        NEXT_PUBLIC_IMAGE_LOADER_FETCH_URL: ${{ inputs.image_provider_fetch_url }}
        NEXT_PUBLIC_COVEO_ORGANIZATION_ID: ${{ inputs.coveo_organization_id }}
        NEXT_PUBLIC_COVEO_ACCESS_TOKEN: ${{ inputs.coveo_access_token }}
        NEXT_PUBLIC_COVEO_TRACKING_ID: ${{ inputs.coveo_tracking_id }}
        NEXT_DEFAULT_HTML_CACHE_CONTROL: ${{ inputs.default_html_cache_control }}
        NEXT_PUBLIC_CDN_CACHE_BUSTING_ID: ${{  inputs.version || github.sha }}
    - name: Build and publish docker image (Nuxt frontend)
      if: ${{ inputs.frontend == 'nuxt' }}
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: ${{ inputs.project_name }}-storefrontcloud-io/vue-storefront:${{ inputs.version || github.sha }}
        registry: ${{ inputs.docker_registry_url }}
        username: ${{ inputs.cloud_username }}
        password: ${{ inputs.cloud_password }}
        dockerfile: .vuestorefrontcloud/docker/nuxtjs/Dockerfile-frontend
        buildoptions: --compress
        buildargs: NPM_EMAIL,NPM_PASS,NPM_USER,NPM_REGISTRY,NUXT_PUBLIC_API_BASE_URL,NUXT_PUBLIC_MULTISTORE_ENABLED,NUXT_IMAGE_PROVIDER,NUXT_PUBLIC_IMAGE_LOADER_FETCH_URL,NUXT_PUBLIC_IMAGE_LOADER_UPLOAD_URL,NUXT_PUBLIC_COVEO_ORGANIZATION_ID,NUXT_PUBLIC_COVEO_ACCESS_TOKEN,NUXT_DEFAULT_HTML_CACHE_CONTROL,NUXT_PUBLIC_COVEO_TRACKING_ID,NUXT_PUBLIC_CDN_CACHE_BUSTING_ID
      env:
        NPM_EMAIL: ${{ inputs.npm_email }}
        NPM_PASS: ${{ inputs.npm_pass }}
        NPM_USER: ${{ inputs.npm_user }}
        NPM_REGISTRY: ${{ inputs.npm_registry }}
        NUXT_PUBLIC_API_BASE_URL: ${{ inputs.api_base_url || format('https://{0}.{1}.{2}/api', inputs.project_name, inputs.cloud_region, 'gcp.storefrontcloud.io') }}
        NUXT_PUBLIC_MULTISTORE_ENABLED: ${{ inputs.multistore_enabled }}
        NUXT_IMAGE_PROVIDER: ${{ inputs.image_provider }}
        NUXT_PUBLIC_IMAGE_LOADER_UPLOAD_URL: ${{ inputs.image_provider_upload_url }}
        NUXT_PUBLIC_IMAGE_LOADER_FETCH_URL: ${{ inputs.image_provider_fetch_url }}
        NUXT_PUBLIC_COVEO_ORGANIZATION_ID: ${{ inputs.coveo_organization_id }}
        NUXT_PUBLIC_COVEO_ACCESS_TOKEN: ${{ inputs.coveo_access_token }}
        NUXT_PUBLIC_COVEO_TRACKING_ID: ${{ inputs.coveo_tracking_id }}
        NUXT_DEFAULT_HTML_CACHE_CONTROL: ${{ inputs.default_html_cache_control }}
        NUXT_PUBLIC_CDN_CACHE_BUSTING_ID: ${{  inputs.version || github.sha }}
