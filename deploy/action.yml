name: Deploy Storefront
description: Builds Middleware app docker image
inputs:
  project_name:
    description: "Project name"
    required: true
  docker_registry_url:
    description: "Docker registry url"
    required: false
    default: "registry.vuestorefront.cloud"
  cloud_username:
    description: "Cloud username"
    required: true
  cloud_password:
    description: "Cloud password"
    required: true
  cloud_region:
    description: "Cloud region"
    required: true
  console_api_url:
    description: "URI for Vue Storefront Console API"
    required: false
    default: "https://api.platform.vuestorefront.io"
  version:
    description: "Version of the app"
    required: true
  middleware_data:
    description: "Middleware Data"
    required: false
    default: ''
  additional_apps:
    description: "Additional Apps Data (Excluding Middleware)"
    required: false
    default: ''
  ##  Middleware inputs
  middleware_path:
    description: "Route to middleware"
    required: false
    default: "/api/"
  middleware_port:
    description: "Port of middleware"
    required: false
    default: 4000
  middleware_base_path:
    description: "The base path of middleware"
    required: false
    default: false
  middleware_heath_check_enabled:
    description: "Health check enabled"
    required: false
    default: true
  middleware_health_check_path:
    description: "health check route"
    required: false 
    default: "/healthz"
runs:
  using: "composite"
  steps:

    - uses: chrnorm/deployment-action@v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        initial-status: in_progress

    - name: Deploy on ${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
      shell: bash
      run: |
          tmpfile=$(mktemp /tmp/farmer-output.XXXXXXX)
          FARMERCODE=$(curl --write-out '%{http_code}' --silent --output "$tmpfile" \
          -H 'Content-Type: application/json' \
          -X PATCH -d '{
            "cloudUserId": "${{ inputs.cloud_username }}",
            "cloudUserPassword": "${{ inputs.cloud_password }}",
            "dockerImageHash": "${{ inputs.version }}",
            "middlewareData": {
              "path": "${{ inputs.middleware_path }}",
              "port": ${{ inputs.middleware_port }},
              "has_base_path": ${{ inputs.middleware_base_path }},
              "health_check": {
                "enabled": ${{ inputs.middleware_heath_check_enabled }},
                "path": "${{ inputs.middleware_health_check_path }}"
              }
            }
            
          }' https://api.console.vuestorefront.io/cloud/instances/${{ inputs.project_name }}-${{ env.REGION }}-gcp-storefrontcloud-io/deploy)
          cat "$tmpfile"
          rm "$tmpfile"
          if [[ $FARMERCODE -lt 400 && $FARMERCODE -ge 200 ]]
          then
              echo "farmer deploy: SUCCESS";
          else
              echo "farmer deploy FAILED ‚ùå with code $FARMERCODE";
              exit 1;
          fi

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        state: "success"
        description: Congratulations! The deploy is done.
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        description: Unfortunately, the instance hasn't been updated.
        state: "failure"
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

