name: Deploy Storefront
description: Builds Middleware app docker image
inputs:
  project_name:
    description: "Project name"
    required: true
  docker_registry_url:
    description: "Docker registry url"
    required: false
    default: "registry.vuestorefront.cloud"
  cloud_username:
    description: "Cloud username"
    required: true
  cloud_password:
    description: "Cloud password"
    required: true
  cloud_region:
    description: "Cloud region"
    required: true
  console_api_url:
    description: "URI for Vue Storefront Console API"
    required: false
    default: "https://api.platform.vuestorefront.io"
  version:
    description: "Version of the app"
    required: false

runs:
  using: "composite"
  steps:
    - uses: chrnorm/deployment-action@v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        initial-status: in_progress
    - name: Deploy on ${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
      shell: bash
      run: |
        tmpfile=$(mktemp /tmp/farmer-output.XXXXXXX)
        FARMERCODE=`curl --write-out '%{http_code}' --silent --output "$tmpfile" \
        -H 'X-User-Id: ${{ inputs.cloud_username }}' \
        -H 'X-Api-Key: ${{ inputs.cloud_password }}' \
        -H 'Content-Type: application/json' \
        -X PATCH -d '{
            "front_version":"${{ github.sha }}",
            "additional_apps":{
                "enabled": true,
                "apps":[{
                  "name":"middleware",
                  "tag":"${{ github.sha }}",
                  "image":"${{ inputs.docker_registry_url }}/${{ inputs.project_name }}-storefrontcloud-io/vue-storefront-middleware",
                  "path":"/api/",
                  "port":"4000",
                  "has_base_path":false,
                  "health_check": {
                    "enabled": true,
                    "path": "/healthz"
                  }
                }]
              }
        }' https://farmer.storefrontcloud.io/instance/${{ inputs.project_name }}-${{ inputs.cloud_region }}-gcp-storefrontcloud-io`
        cat "$tmpfile"
        rm "$tmpfile"
        if [[ $FARMERCODE<"400" && $FARMERCODE -ge "200" ]]
        then
            echo "farmer deploy: SUCCESS";
        else
            echo "farmer deploy FAILED ❌ with code $FARMERCODE";
            exit 1;
        fi

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        state: "success"
        description: Congratulations! The deploy is done.
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        description: Unfortunately, the instance hasn't been updated.
        state: "failure"
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

