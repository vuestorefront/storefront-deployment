name: Deploy Storefront
description: Builds Middleware app docker image
inputs:
  project_name:
    description: 'Project name'
    required: true
  docker_registry_url:
    description: 'Docker registry url'
    required: false
    default: 'registry.vuestorefront.cloud'
  cloud_username:
    description: 'Cloud username'
    required: true
  cloud_password:
    description: 'Cloud password'
    required: true
  cloud_region:
    description: 'Cloud region'
    required: true
  console_api_url:
    description: 'URI for Vue Storefront Console API'
    required: false
    default: 'https://api.platform.vuestorefront.io'
  cloud_api_url:
    description: 'URI for Vue Storefront Cloud API'
    required: false
    default: 'https://farmer.vuestorefront.cloud'

runs:
  using: "composite"
  steps:
    - uses: chrnorm/deployment-action@releases/v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        environment: production
        initial-status: in_progress

    - name: Deploy on ${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
      shell: bash
      run: |
        curl --location --request PATCH '${{ inputs.console_api_url }}/cloud/instances/${{ inputs.project_name }}-${{ inputs.cloud_region }}-gcp-storefrontcloud-io/deploy' --header 'Content-Type: application/json' --data-raw '{ "cloudUserId": "${{ inputs.cloud_username }}", "cloudUserPassword": "${{ inputs.cloud_password }}", "dockerImageHash": "${{ github.sha }}"}'

    - name: Deploy middleware on ${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io/api/
      shell: bash
      run: |
        if curl -f -s -H 'X-User-Id: ${{ inputs.cloud_username }}' -H 'X-Api-Key: ${{ inputs.cloud_password }}' -H 'Content-Type: application/json' -X PATCH -d '{
          "front_version":"${{ github.sha }}",
          "additional_apps": {
            "apps":[{
              "name":"middleware",
              "tag":"${{ github.sha }}",
              "image":"${{ inputs.docker_registry_url }}/${{ inputs.project_name }}-storefrontcloud-io/vue-storefront-middleware",
              "path":"/api/",
              "port":"4000",
              "has_base_path":false
            }],
            "enabled": true
            }
          }' ${{ inputs.cloud_api_url }}/instance/${{ inputs.project_name }}-${{ inputs.cloud_region }}-gcp-storefrontcloud-io; then
          echo "Instance updated"
        else
          echo "Something went wrong during the update process..."
          exit 1
        fi

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        state: 'success'
        description: Congratulations! The deploy is done.
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        description: Unfortunately, the instance hasn't been updated.
        state: 'failure'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
