name: Deploy Storefront
description: Builds Middleware app docker image
inputs:
  project_name:
    description: 'Project name'
    required: true
  docker_registry_url:
    description: 'Docker registry url'
    required: false
    default: 'registry.vuestorefront.cloud'
  cloud_username:
    description: 'Cloud username'
    required: true
  cloud_password:
    description: 'Cloud password'
    required: true
  cloud_region:
    description: 'Cloud region'
    required: true
  console_api_url:
    description: 'URI for Vue Storefront Console API'
    required: false
    default: 'https://api.platform.vuestorefront.io'
  version:
    description: 'Version of the app'
    required: false

runs:
  using: "composite"
  steps:
    - uses: chrnorm/deployment-action@releases/v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        environment: production
        initial-status: in_progress

    - name: Deploy (${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io)
      uses: fjogeleit/http-request-action@v1
      with:
        url: "${{ inputs.console_api_url }}/cloud/instances/${{ inputs.project_name }}-${{ inputs.cloud_region }}-gcp-storefrontcloud-io/deploy"
        method: "PATCH"
        customHeaders: '{"Content-Type":"application/json"}'
        data: '{"middleware":true,"cloudUserId":"${{ inputs.cloud_username }}","cloudUserPassword":"${{ inputs.cloud_password }}","dockerImageHash":"${{ inputs.version || github.sha }}","env_var":{"NUXT_PUBLIC_ALOKAI_MIDDLEWARE_CDN_CACHE_BUSTING_ID":{"name":"NUXT_PUBLIC_ALOKAI_MIDDLEWARE_CDN_CACHE_BUSTING_ID","value":"${{ inputs.version || github.sha }}","is_secret":false},"NEXT_PUBLIC_ALOKAI_MIDDLEWARE_CDN_CACHE_BUSTING_ID":{"name":"NEXT_PUBLIC_ALOKAI_MIDDLEWARE_CDN_CACHE_BUSTING_ID","value":"${{ inputs.version || github.sha }}","is_secret":false}},"middlewareData":{"path":"/api/","port":4000,"has_base_path":false}}'
        timeout: 60000

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        state: 'success'
        description: Congratulations! The deploy is done.
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: '${{ github.token }}'
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        description: Unfortunately, the instance hasn't been updated.
        state: 'failure'
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
