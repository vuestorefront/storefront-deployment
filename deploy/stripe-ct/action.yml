name: Deploy Storefront
description: Builds Middleware app docker image
inputs:
  project_name:
    description: "Project name"
    required: true
  docker_registry_url:
    description: "Docker registry url"
    required: false
    default: "registry.vuestorefront.cloud"
  cloud_username:
    description: "Cloud username"
    required: true
  cloud_password:
    description: "Cloud password"
    required: true
  cloud_region:
    description: "Cloud region"
    required: true
  console_api_url:
    description: "URI for Vue Storefront Console API"
    required: false
    default: "https://api.platform.vuestorefront.io"
  version:
    description: "Version of the app"
    required: false
  extension_module_name:
    description: "Stripe CT extension module name"
    required: false
    default: "ct-stripe-extension"
  extension_module_port:
    description: "Stripe CT extension module port"
    required: false
    default: "8080"
  notification_module_name:
    description: "Stripe CT notification module name"
    required: false
    default: "ct-stripe-notification"
  notification_module_port:
    description: "Stripe CT notification module port"
    required: false
    default: "8081"

runs:
  using: "composite"
  steps:
    - uses: chrnorm/deployment-action@releases/v2
      name: Create GitHub deployment
      id: deployment
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        environment: production
        initial-status: in_progress

    - name: Deploy Stripe CT modules (${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io)
      uses: fjogeleit/http-request-action@v1
      with:
        url: "${{ inputs.console_api_url }}/cloud/instances/${{ inputs.project_name }}-${{ inputs.cloud_region }}-gcp-storefrontcloud-io/deploy"
        method: "PATCH"
        customHeaders: '{"Content-Type":"application/json"}'
        data: '{"additionalApps":{"apps":{"commercetools-stripe-extension-module":{"name":"${{ inputs.extension_module_name }}","tag":"${{ inputs.version || github.sha }}","image":"${{ inputs.docker_registry_url }}/${{ inputs.project_name }}-storefrontcloud-io/${{ inputs.extension_module_name }}:${{ inputs.version || github.sha }","path":"/${{ inputs.extension_module_name }}/","port":"${{ inputs.extension_module_port }}","has_base_path":false},"commercetools-stripe-notification-module":{"name":"${{ inputs.notification_module_name }}","tag":"${{ inputs.version || github.sha }}","image":"${{ inputs.docker_registry_url }}/${{ inputs.project_name }}-storefrontcloud-io/${{ inputs.notification_module_name }}:${{ inputs.version || github.sha }","path":"/${{ inputs.notification_module_name }}/","port":"${{ inputs.notification_module_port }}","has_base_path":false}}}}'
        timeout: 60000

    - name: Update deployment status (success)
      if: success()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        state: "success"
        description: Congratulations! The deploy is done.
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: failure()
      uses: chrnorm/deployment-status@releases/v2
      with:
        token: "${{ github.token }}"
        environment-url: https://${{ inputs.project_name }}.${{ inputs.cloud_region }}.gcp.storefrontcloud.io
        description: Unfortunately, the instance hasn't been updated.
        state: "failure"
        deployment-id: ${{ steps.deployment.outputs.deployment_id }}
