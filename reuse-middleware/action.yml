name: Reuse Middleware
description: Re-use Middleware app docker image from other Console project sourced with the same repository
inputs:
  source_project_name:
    description: 'The Middleware Docker image source project name'
    required: true
  project_name:
    description: 'Project name of Middleware image copy to'
    required: true
  docker_registry_url:
    description: 'Docker registry url'
    required: false
    default: 'registry.vuestorefront.cloud'
  cloud_username:
    description: 'Cloud username'
    required: true
  cloud_password:
    description: 'Cloud password'
    required: true
runs:
  using: "composite"
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - name: Encode Basic Auth
      id: base64-auth
      shell: bash
      run: |
        echo "BASIC_AUTH_TOKEN=$(echo -n ${{ inputs.cloud_username }}:${{ inputs.cloud_password }} | base64 -w 0)" >> "$GITHUB_OUTPUT"
    - name: Check for existing image
      id: check-existing-image
      uses: javajawa/check-registry-for-image@v2
      with:
        registry: ${{ inputs.docker_registry_url }}
        auth: "Basic ${{ steps.base64-auth.outputs.BASIC_AUTH_TOKEN }}"
        repository: ${{ inputs.source_project_name }}-storefrontcloud-io/vue-storefront-middleware
        tag: ${{ github.sha }}

    - name: Pull docker image & pushlish on new project (middleware)
      if: ${{ steps.check-existing-image.outputs.exists == 'true' }}
      uses: onichandame/docker-registry-sync-action@master
      with:
        source_repository: ${{ inputs.docker_registry_url }}/${{ inputs.source_project_name }}-storefrontcloud-io/vue-storefront-middleware:${{ github.sha }}
        source_username: ${{ inputs.cloud_username }}
        source_password: ${{ inputs.cloud_password }}
        target_repository: ${{ inputs.docker_registry_url }}/${{ inputs.project_name }}-storefrontcloud-io/vue-storefront-middleware:${{ github.sha }}
        target_username: ${{ inputs.cloud_username }}
        target_password: ${{ inputs.cloud_password }}
